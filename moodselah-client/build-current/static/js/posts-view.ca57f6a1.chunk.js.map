{"version":3,"sources":["components/MapPlaceModal/MapPlaceModal.module.scss","components/Map/Map.module.scss","components/MapPlaceModal/index.tsx","components/MapPlaceModal/MapPlaceModal.tsx","components/Map/Map.tsx","components/Map/index.tsx","routes/Main/queries.ts","components/PhotoSlider/PhotoSlider.module.scss","components/PhotoSlider/PhotoSlider.tsx","components/PhotoSlider/index.tsx","routes/PostView/queries.ts","../node_modules/lodash/_Symbol.js","../node_modules/lodash/uniqueId.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_root.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/isObjectLike.js","components/PhotoContent/PhotoContent.module.scss","routes/PostView/PostView.module.scss","components/PhotoContent/queries.ts","helpers/nl2br.tsx","components/PhotoContent/PhotoContent.tsx","components/PhotoContent/index.tsx","routes/PostView/PostView.tsx","routes/PostView/index.tsx"],"names":["module","exports","container","contentContainer","closeContainer","btnClose","info","title","btnContainer","btnLink","photos","MapPlaceModal","React","props","react","Modal_default","a","open","isVisible","onClose","className","s","type","onClick","children","settings","dots","infinite","speed","autoplay","slidesToShow","slidesToScroll","prevArrow","_ref","style","Object","objectSpread","left","zIndex","display","indexOf","nextArrow","_ref2","right","Map","ref","mapRef","classNames","components_MapPlaceModal","onCloseMapPlaceModal","isVisiblePlaceInfo","place","address","href","concat","lat","lng","target","lib_default","map","photo","key","path","postId","src","MapContainer","marker","geocoder","clusterer","state","document","getElementById","this","onInit","script","createElement","onload","daum","maps","load","_this2","id","body","appendChild","prevProps","setMinMax","updateData","updateCenter","updateMarkerFromDetailAddr","getCurrentLocation","center","initialOption","_this$props$initialOp","initialCenter","initialLevel","level","current","LatLng","services","Geocoder","readOnly","data","length","Marker","setMap","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","setZoomable","registerMarkers","registerSubscribes","_this3","clear","MarkerClusterer","averageCenter","minLevel","markers","position","posts","flatMap","post","event","addListener","setState","addMarkers","_this4","onMapReady","region","onChangeRegion","onChangeRegionComplete","e","searchDetailAddrFromCoords","latLng","result","status","Status","OK","roadAddr","road_address","address_name","jibunAddr","setPosition","onChangeMarkerPosition","getLat","getLng","searchCoordFromDetailAddr","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","Error","isEqual","setCenter","maxZoomLevel","setMinLevel","minZoomLevel","setMaxLevel","callback","coord2Address","_this5","addressSearch","y","x","Map_Map","assign","bounds","matchBoundsKey","getBounds","zoomLevel","getLevel","mathCenterKey","getCenter","swLatLng","getSouthWest","neLatLng","getNorthEast","n","w","defaultProps","autobind","GET_POSTS","gql","_templateObject","slider","slideItem","slideContent","react_default","onImageLoad","img","width","naturalWidth","height","naturalHeight","parentNode","paddingBottom","PhotoSlider","_ref3","alt","onLoad","GET_POST","Symbol","__webpack_require__","toString","idCounter","prefix","baseToString","value","arrayMap","isArray","isSymbol","INFINITY","symbolProto","prototype","undefined","symbolToString","call","freeGlobal","freeSelf","self","root","Function","global","array","iteratee","index","Array","baseGetTag","isObjectLike","symbolTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","header","profileLink","avatarContainer","nick","photoContainer","content","comments","mapTitle","mapAddress","management","information","DELETE_POST","newlineRegex","INFORMATION","WIFI","0","1","2","CHILD_CHAIR","STUDY","PhotoContent","str","isOwner","onClickRemove","Link","to","author","Avatar","containerClassName","user","split","line","match","uniqueId","wifi","childChair","study","Fragment","DeletePostMutation","Mutation","PhotoContentContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","deletePostMutation","preventDefault","_this$props","confirm","variables","toast","history","DeletePost","success","setTimeout","push","pathname","PhotoContent_DeletePostMutation","mutation","onCompleted","postDeletePostMutation","refetchQueries","query","skip","components_PhotoContent_PhotoContent","withRouter","i18n","loading","_ref$GetPost","GetPost","_ref$GetPost$post","substring","Helmet_default","components_PhotoContent","PostViewQuery","Query","PostViewContainer","params","PostView_PostViewQuery","routes_PostView_PostView","Component"],"mappings":"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","file":"static/js/posts-view.ca57f6a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapPlaceModal_container__1IjZ3\",\"contentContainer\":\"MapPlaceModal_contentContainer__WX-TC\",\"closeContainer\":\"MapPlaceModal_closeContainer__aP5Mh\",\"btnClose\":\"MapPlaceModal_btnClose__12qcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Map_info__13daX\",\"title\":\"Map_title__mwyY4\",\"btnContainer\":\"Map_btnContainer__2jQ7p\",\"btnLink\":\"Map_btnLink__W2ZXR\",\"photos\":\"Map_photos__3KYHH\"};","import MapPlaceModal from './MapPlaceModal';\n\nexport default MapPlaceModal;\n","import * as React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport s from './MapPlaceModal.module.scss';\n\nexport interface MapPlaceModalProps {\n  children: any;\n  isVisible: boolean;\n  onClose: () => void;\n}\n\nconst MapPlaceModal: React.SFC<MapPlaceModalProps> = React.memo(props => {\n  return (\n    <Modal open={props.isVisible} onClose={props.onClose}>\n      <div className={s.container}>\n        <div className={s.closeContainer}>\n          <button className={s.btnClose} type=\"button\" onClick={props.onClose}>\n            x\n          </button>\n        </div>\n        <div className={s.contentContainer}>{props.children}</div>\n      </div>\n    </Modal>\n  );\n});\n\nexport default MapPlaceModal;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport classNames from 'classnames';\nimport MapPlaceModal from '../MapPlaceModal';\nimport s from './Map.module.scss';\n\ninterface IProps {\n  mapRef: React.RefObject<HTMLDivElement>;\n  className?: any;\n  onCloseMapPlaceModal: any;\n  place: any;\n  isVisiblePlaceInfo: boolean;\n}\n\ninterface IArrowProps {\n  className?: any;\n  style?: any;\n  onClick?: any;\n}\n\nconst SliderPrevArrow: React.SFC<IArrowProps> = ({ className, style, onClick }) => (\n  <div\n    className={className}\n    style={{\n      ...style,\n      left: '16px',\n      zIndex: 10,\n      display: className.indexOf('disable') !== -1 ? 'none' : 'block'\n    }}\n    onClick={onClick}\n  />\n);\n\nconst SliderNextArrow: React.SFC<IArrowProps> = ({ className, style, onClick }) => (\n  <div\n    className={className}\n    style={{\n      ...style,\n      right: '16px',\n      zIndex: 10,\n      display: className.indexOf('disable') !== -1 ? 'none' : 'block'\n    }}\n    onClick={onClick}\n  />\n);\n\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  autoplay: false,\n  slidesToShow: 4,\n  slidesToScroll: 4,\n  prevArrow: <SliderPrevArrow />,\n  nextArrow: <SliderNextArrow />\n};\n\nconst Map: React.SFC<IProps> = React.memo(props => (\n  <>\n    <div ref={props.mapRef} className={classNames(props.className)} />\n    <MapPlaceModal onClose={props.onCloseMapPlaceModal} isVisible={props.isVisiblePlaceInfo}>\n      {props.place ? (\n        <div className={s.info}>\n          <h2 className={s.title}>{props.place.address}</h2>\n          <div className={s.btnContainer}>\n            <a\n              className={s.btnLink}\n              href={`http://map.daum.net/link/map/${props.place.address},${props.place.lat},${props.place.lng}`}\n              target=\"_blank\"\n            >\n              큰지도보기\n            </a>\n            <a\n              className={s.btnLink}\n              href={`http://map.daum.net/link/to/${props.place.address},${props.place.lat},${props.place.lng}`}\n              target=\"_blank\"\n            >\n              길찾기\n            </a>\n          </div>\n          <div className={s.photos}>\n            <Slider {...settings}>\n              {props.place.photos.map(photo => (\n                <a key={photo.path} href={`/posts/${photo.postId}`}>\n                  <img src={photo.path} />\n                </a>\n              ))}\n            </Slider>\n          </div>\n        </div>\n      ) : null}\n    </MapPlaceModal>\n  </>\n));\n\nexport default Map;\n","import * as React from 'react';\nimport isEqual from 'lodash-es/isEqual';\nimport autobind from 'autobind-decorator';\nimport Map from './Map';\n\ndeclare const daum: any;\n\ntype latLng = { roadAddr?: string; jibunAddr?: string; lat: number; lng: number };\ntype bounds = { n: number; e: number; s: number; w: number };\n\ntype mapPositionInfo = {\n  bounds: bounds;\n  zoomLevel: number;\n  center: latLng;\n};\n\nexport interface IProps {\n  className?: string;\n  initialOption?: { center?: latLng; level?: number };\n  maxZoomLevel?: number;\n  minZoomLevel?: number;\n  onMapReady?: (info: mapPositionInfo) => void;\n  onChangeRegion?: (info: mapPositionInfo) => void;\n  onChangeRegionComplete?: (info: mapPositionInfo) => void;\n  onChangeMarkerPosition?: (position: latLng) => void;\n  center?: { lat: number; lng: number };\n  address?: string;\n  data: any | null;\n  readOnly?: boolean;\n}\n\nexport interface IState {\n  place: any;\n  isVisiblePlaceInfo: boolean;\n}\n\nclass MapContainer extends React.PureComponent<IProps, IState> {\n  static defaultProps = {\n    onMapReady: () => {},\n    onChangeRegion: () => {},\n    onChangeRegionComplete: () => {},\n    onChangeMarkerPosition: () => {},\n    data: [],\n    readOnly: false\n  };\n\n  private mapRef: React.RefObject<HTMLDivElement> = React.createRef();\n  private map: any;\n  private marker: any;\n  private geocoder: any;\n  private clusterer: any;\n\n  public state: IState = {\n    place: null,\n    isVisiblePlaceInfo: false\n  };\n\n  static matchBoundsKey(bounds) {\n    const swLatLng = bounds.getSouthWest();\n    const neLatLng = bounds.getNorthEast();\n    return { n: neLatLng.getLat(), e: neLatLng.getLng(), s: swLatLng.getLat(), w: swLatLng.getLng() };\n  }\n\n  static mathCenterKey(center) {\n    return { lat: center.getLat(), lng: center.getLng() };\n  }\n\n  public async componentDidMount() {\n    const scriptId = 'kakao_map';\n    const isExist = !!document.getElementById(scriptId);\n\n    if (!isExist) {\n      const script = document.createElement('script');\n      script.src =\n        '//dapi.kakao.com/v2/maps/sdk.js?appkey=128a2da1935ecfc8ce068ce4e4fe0d7d&libraries=services,clusterer,drawing&autoload=false';\n      script.onload = () => daum.maps.load(() => this.onInit());\n      script.id = scriptId;\n      document.body.appendChild(script);\n    } else {\n      this.onInit();\n    }\n  }\n\n  public componentDidUpdate(prevProps) {\n    this.setMinMax();\n    this.updateData(prevProps);\n    this.updateCenter(prevProps);\n    this.updateMarkerFromDetailAddr(prevProps);\n  }\n\n  get region() {\n    return {\n      bounds: MapContainer.matchBoundsKey(this.map.getBounds()),\n      zoomLevel: this.map.getLevel(),\n      center: MapContainer.mathCenterKey(this.map.getCenter())\n    };\n  }\n\n  private async onInit() {\n    let center: latLng | undefined;\n    let level: number | undefined;\n    try {\n      center = await this.getCurrentLocation();\n    } catch (e) {\n      // nothing to do\n    }\n    if (this.props.initialOption) {\n      const { center: initialCenter, level: initialLevel } = this.props.initialOption;\n      initialCenter && (center = initialCenter);\n      initialLevel && (level = initialLevel);\n    }\n    const { lat, lng } = center || { lat: 37.566826, lng: 126.9786567 }; // default: 서울시청\n\n    // 지도를 생성합니다\n    this.map = new daum.maps.Map(this.mapRef.current, {\n      center: new daum.maps.LatLng(lat, lng),\n      level\n    });\n\n    // 주소-좌표 변환 객체를 생성합니다\n    this.geocoder = new daum.maps.services.Geocoder();\n\n    if (!this.props.readOnly && (!this.props.data || !this.props.data.length)) {\n      // 지도를 클릭한 위치에 표출할 마커입니다\n      this.marker = new daum.maps.Marker();\n      // 지도에 마커를 표시합니다\n      this.marker.setMap(this.map);\n    }\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n    const mapTypeControl = new daum.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n    // daum.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n    this.map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n    const zoomControl = new daum.maps.ZoomControl();\n    this.map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);\n    this.map.setZoomable(false);\n\n    this.registerMarkers();\n    this.registerSubscribes();\n  }\n\n  private registerMarkers() {\n    if (!this.props.data) {\n      return;\n    }\n    if (!this.clusterer) {\n      // 마커 클러스터러를 생성합니다\n      this.clusterer = new daum.maps.MarkerClusterer({\n        map: this.map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n        averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n        minLevel: 10 // 클러스터 할 최소 지도 레벨\n      });\n    } else {\n      this.clusterer.clear();\n    }\n    const markers = this.props.data.map(data => {\n      const position = new daum.maps.LatLng(data.lat, data.lng);\n      const marker = new daum.maps.Marker({\n        position\n      });\n      const photos = (data.posts || []).flatMap(post => post.photos.map(photo => ({ ...photo, postId: post.id })));\n      // 마커에 클릭이벤트를 등록합니다\n      daum.maps.event.addListener(marker, 'click', () => {\n        this.setState({\n          isVisiblePlaceInfo: true,\n          place: {\n            ...data,\n            photos\n          }\n        });\n      });\n      return marker;\n    });\n    // 클러스터러에 마커들을 추가합니다\n    this.clusterer.addMarkers(markers);\n  }\n\n  private registerSubscribes() {\n    this.setMinMax();\n    this.props.onMapReady && this.props.onMapReady(this.region);\n    daum.maps.event.addListener(this.map, 'bounds_changed', () => {\n      this.props.onChangeRegion && this.props.onChangeRegion(this.region);\n    });\n    daum.maps.event.addListener(this.map, 'idle', () => {\n      this.props.onChangeRegionComplete && this.props.onChangeRegionComplete(this.region);\n    });\n    // 지도에 클릭 이벤트를 등록합니다\n    // 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다\n    daum.maps.event.addListener(this.map, 'click', e => {\n      if (!this.marker) {\n        return;\n      }\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      this.searchDetailAddrFromCoords(e.latLng, (result, status) => {\n        if (status === daum.maps.services.Status.OK) {\n          const roadAddr = !!result[0].road_address ? result[0].road_address.address_name : '';\n          const jibunAddr = result[0].address.address_name;\n\n          // 마커를 클릭한 위치에 표시합니다\n          this.marker.setPosition(e.latLng);\n          this.marker.setMap(this.map);\n\n          if (this.props.onChangeMarkerPosition) {\n            this.props.onChangeMarkerPosition({\n              roadAddr,\n              jibunAddr,\n              lat: e.latLng.getLat(),\n              lng: e.latLng.getLng()\n            });\n          }\n        }\n      });\n    });\n\n    if (this.props.address) {\n      this.searchCoordFromDetailAddr(this.props.address);\n    }\n  }\n\n  private getCurrentLocation(): Promise<latLng> {\n    return new Promise((resolve, reject) => {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            resolve({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            });\n          },\n          error => {\n            // error.code can be:\n            //   0: unknown error\n            //   1: permission denied\n            //   2: position unavailable (error response from location provider)\n            //   3: timed out\n            reject(error);\n          }\n        );\n      } else {\n        reject(new Error('not supported geolocation.'));\n      }\n    });\n  }\n\n  private updateData(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.registerMarkers();\n    }\n  }\n\n  private updateCenter(prevProps) {\n    const { center } = this.props;\n    if (center && !isEqual(prevProps.center, center)) {\n      this.map.setCenter(new daum.maps.LatLng(center.lat, center.lng));\n    }\n  }\n\n  private updateMarkerFromDetailAddr(prevProps) {\n    if (prevProps.address !== this.props.address) {\n      this.searchCoordFromDetailAddr(this.props.address);\n    }\n  }\n\n  private setMinMax() {\n    if (this.map) {\n      this.props.maxZoomLevel && this.map.setMinLevel(this.props.maxZoomLevel);\n      this.props.minZoomLevel && this.map.setMaxLevel(this.props.minZoomLevel);\n    }\n  }\n\n  private searchDetailAddrFromCoords(coords, callback) {\n    // 좌표로 법정동 상세 주소 정보를 요청합니다\n    this.geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\n  }\n\n  private searchCoordFromDetailAddr(address) {\n    this.geocoder.addressSearch(address, (result, status) => {\n      // 정상적으로 검색이 완료됐으면\n      if (status === daum.maps.services.Status.OK) {\n        const coords = new daum.maps.LatLng(result[0].y, result[0].x);\n        // 클릭한 위도, 경도 정보를 가져옵니다\n        this.searchDetailAddrFromCoords(coords, (result, status) => {\n          if (status === daum.maps.services.Status.OK) {\n            const roadAddr = !!result[0].road_address ? result[0].road_address.address_name : '';\n            const jibunAddr = result[0].address.address_name;\n\n            // 마커를 클릭한 위치에 표시합니다\n            this.marker.setPosition(coords);\n            this.map.setCenter(coords);\n\n            if (this.props.onChangeMarkerPosition) {\n              this.props.onChangeMarkerPosition({\n                roadAddr,\n                jibunAddr,\n                lat: coords.getLat(),\n                lng: coords.getLng()\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  @autobind\n  private onCloseMapPlaceModal() {\n    this.setState({ isVisiblePlaceInfo: false });\n  }\n\n  public render() {\n    return (\n      <Map {...this.props} {...this.state} mapRef={this.mapRef} onCloseMapPlaceModal={this.onCloseMapPlaceModal} />\n    );\n  }\n}\n\nexport default MapContainer;\n","import { gql } from 'apollo-boost';\n\nexport const GET_POSTS = gql`\n  query getPosts($skip: Int!) {\n    GetPosts(skip: $skip, limit: 20, order: \"{id: 'DESC'}\", where: \"\") {\n      success\n      error\n      hasNext\n      posts {\n        id\n        title\n        content\n        wifi\n        childChair\n        study\n        photos {\n          id\n          title\n          content\n          path\n        }\n        author {\n          id\n          nick\n          profilePhoto\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"PhotoSlider_slider__2fKws\",\"slideItem\":\"PhotoSlider_slideItem__3YvdY\",\"slideContent\":\"PhotoSlider_slideContent__3ZatA\",\"photo\":\"PhotoSlider_photo__N5crQ\"};","import React from 'react';\nimport Slider from 'react-slick';\nimport { getPosts_GetPosts_posts_photos, getPost_GetPost_post_photos } from '~/types/api';\nimport s from './PhotoSlider.module.scss';\n\ninterface IProps {\n  photos: (getPosts_GetPosts_posts_photos | getPost_GetPost_post_photos | null)[] | null;\n}\n\ninterface IArrowProps {\n  className?: any;\n  style?: any;\n  onClick?: any;\n}\n\nconst SliderPrevArrow: React.SFC<IArrowProps> = ({ className, style, onClick }) => (\n  <div\n    className={className}\n    style={{\n      ...style,\n      left: '16px',\n      zIndex: 10,\n      display: className.indexOf('disable') !== -1 ? 'none' : 'block'\n    }}\n    onClick={onClick}\n  />\n);\n\nconst SliderNextArrow: React.SFC<IArrowProps> = ({ className, style, onClick }) => (\n  <div\n    className={className}\n    style={{\n      ...style,\n      right: '16px',\n      zIndex: 10,\n      display: className.indexOf('disable') !== -1 ? 'none' : 'block'\n    }}\n    onClick={onClick}\n  />\n);\n\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  autoplay: false,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  prevArrow: <SliderPrevArrow />,\n  nextArrow: <SliderNextArrow />\n};\n\nconst onImageLoad = e => {\n  const img: any = e.target;\n  const width = img.naturalWidth;\n  const height = img.naturalHeight;\n  img.parentNode.style.paddingBottom = `${(height / width) * 100}%`;\n};\n\nconst PhotoSlider: React.SFC<IProps> = ({ photos }) => (\n  <Slider className={s.slider} {...settings}>\n    {photos &&\n      photos.map(photo => {\n        if (!photo) {\n          return null;\n        }\n        return (\n          <div key={photo.id} className={s.slideItem}>\n            <div className={s.slideContent}>\n              <img className={s.photo} src={photo.path} alt=\"사진\" onLoad={onImageLoad} />\n            </div>\n          </div>\n        );\n      })}\n  </Slider>\n);\n\nexport default PhotoSlider;\n","import PhotoSlider from './PhotoSlider';\n\nexport default PhotoSlider;\n","import { gql } from 'apollo-boost';\n\nexport const GET_POST = gql`\n  query getPost($id: Int!) {\n    GetPost(id: $id) {\n      success\n      error\n      post {\n        id\n        content\n        wifi\n        childChair\n        study\n        photos {\n          id\n          path\n        }\n        place {\n          address\n          lat\n          lng\n          posts {\n            id\n            photos {\n              id\n              path\n            }\n          }\n        }\n        author {\n          id\n          nick\n          profilePhoto\n        }\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var toString = require('./toString');\n/** Used to generate unique IDs. */\n\n\nvar idCounter = 0;\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\n\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PhotoContent_root__13p-n\",\"container\":\"PhotoContent_container__3XLTK\",\"header\":\"PhotoContent_header__3F3CL\",\"profileLink\":\"PhotoContent_profileLink__2-Teb\",\"avatarContainer\":\"PhotoContent_avatarContainer__2jcEs\",\"nick\":\"PhotoContent_nick__24_6l\",\"photoContainer\":\"PhotoContent_photoContainer__2XZL0\",\"contentContainer\":\"PhotoContent_contentContainer__14KLN\",\"content\":\"PhotoContent_content__2RdX0\",\"comments\":\"PhotoContent_comments__Q8RNz\",\"mapTitle\":\"PhotoContent_mapTitle__1Ne8l\",\"mapAddress\":\"PhotoContent_mapAddress__2pmqv\",\"map\":\"PhotoContent_map__Uw9tY\",\"management\":\"PhotoContent_management__2TzDU\",\"information\":\"PhotoContent_information__17iu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostView_container__LQLsK\",\"content\":\"PostView_content__1IWLQ\"};","import { gql } from 'apollo-boost';\n\nexport const DELETE_POST = gql`\n  mutation deletePost($id: Int!) {\n    DeletePost(id: $id) {\n      success\n      error\n    }\n  }\n`;\n","import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nconst newlineRegex = /(\\r\\n|\\r|\\n)/g;\n\nexport default (str: string | number) => {\n  if (typeof str === 'number') {\n    return str;\n  }\n  if (typeof str !== 'string') {\n    return '';\n  }\n  return str.split(newlineRegex).map(line => {\n    if (line.match(newlineRegex)) {\n      return <br key={uniqueId()} />;\n    }\n    return line;\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPosts_GetPosts_posts, getPost_GetPost_post, getPost_GetPost_post_place } from '~/types/api';\nimport Avatar from '../Avatar';\nimport PhotoSlider from '../PhotoSlider';\nimport Map from '~/components/Map';\nimport nl2br from '~/helpers/nl2br';\nimport s from './PhotoContent.module.scss';\n\ninterface GetPosts extends getPosts_GetPosts_posts {\n  place?: getPost_GetPost_post_place;\n}\n\ninterface IProps {\n  data: GetPosts | getPost_GetPost_post;\n  isOwner?: boolean;\n  onClickRemove: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst INFORMATION = {\n  WIFI: {\n    0: 'WiFi 확인 안해봤어요.',\n    1: 'WiFi 있었어요.',\n    2: 'WiFi는 없었어요.'\n  },\n  CHILD_CHAIR: {\n    0: '아기의자가 있었나?',\n    1: '아기의자가 있어요.',\n    2: '아기의자가 없어요.'\n  },\n  STUDY: {\n    0: '모름',\n    1: '스터디하기에도 좋아요.',\n    2: '스터디하기에는 별로예요.'\n  }\n};\n\nconst PhotoContent: React.SFC<IProps> = ({ data, isOwner, onClickRemove }) => (\n  <div className={s.root}>\n    <article className={s.container}>\n      <header className={s.header}>\n        <Link className={s.profileLink} to={`/@${data.author.nick}`}>\n          <Avatar containerClassName={s.avatarContainer} user={data.author} />\n          <div className={s.nick}>{data.author.nick}</div>\n        </Link>\n      </header>\n      <div className={s.photoContainer}>\n        <PhotoSlider photos={data.photos} />\n      </div>\n      <div className={s.contentContainer}>\n        <div className={s.content}>\n          <Link to={`/@${data.author.nick}`}>\n            <strong>{data.author.nick}</strong>\n          </Link>\n          &nbsp;\n          {nl2br(data.content)}\n          <ul className={s.information}>\n            <li>\n              <img src={data.wifi === 1 ? '/img/icon/wifi-active.png' : '/img/icon/wifi.png'} alt=\"wifi\" />\n              {INFORMATION.WIFI[data.wifi]}\n            </li>\n            <li>\n              <img\n                src={data.childChair === 1 ? '/img/icon/chair-active.png' : '/img/icon/chair.png'}\n                alt=\"child-chair\"\n              />\n              {INFORMATION.CHILD_CHAIR[data.childChair]}\n            </li>\n            {data.study ? (\n              <li>\n                <img src={data.study === 1 ? '/img/icon/school-active.png' : '/img/icon/school.png'} alt=\"study\" />\n                {INFORMATION.STUDY[data.study]}\n              </li>\n            ) : null}\n          </ul>\n          {isOwner ? (\n            <div className={s.management}>\n              <Link to={`/posts/${data.id}/edit`}>수정</Link>\n              <button type=\"button\" onClick={onClickRemove}>\n                삭제\n              </button>\n            </div>\n          ) : null}\n        </div>\n        {/* <section className={s.comments}>\n          <ul>\n            <li>\n              <div>nick</div>\n              <div>content</div>\n            </li>\n          </ul>\n        </section> */}\n      </div>\n    </article>\n    {data.place ? (\n      <>\n        <h3 className={s.mapTitle}>LOCATION</h3>\n        <p className={s.mapAddress}>{data.place.address}</p>\n        <Map\n          className={s.map}\n          initialOption={{\n            level: 4,\n            center: data.place\n          }}\n          data={[data.place]}\n          maxZoomLevel={2}\n        />\n      </>\n    ) : null}\n  </div>\n);\n\nexport default PhotoContent;\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Mutation, MutationFn } from 'react-apollo';\nimport { toast } from 'react-toastify';\nimport autobind from 'autobind-decorator';\nimport {\n  getPosts_GetPosts_posts,\n  getPost_GetPost_post,\n  getPost_GetPost_post_place,\n  deletePost,\n  deletePostVariables\n} from '~/types/api';\nimport { GET_POSTS } from '~/routes/Main/queries';\nimport { DELETE_POST } from './queries';\nimport PhotoContent from './PhotoContent';\n\ninterface GetPosts extends getPosts_GetPosts_posts {\n  place?: getPost_GetPost_post_place;\n}\n\nexport interface PhotoContentProps extends RouteComponentProps {\n  data: GetPosts | getPost_GetPost_post;\n  isOwner?: boolean;\n}\n\nexport interface PhotoContentState {}\n\nclass DeletePostMutation extends Mutation<deletePost, deletePostVariables> {}\n\nclass PhotoContentContainer extends React.Component<PhotoContentProps, PhotoContentState> {\n  public deletePostMutation?: MutationFn<deletePost, deletePostVariables>;\n\n  constructor(props: PhotoContentProps) {\n    super(props);\n  }\n\n  @autobind\n  private onClickRemove(e: React.MouseEvent<HTMLElement>) {\n    e.preventDefault();\n    const { isOwner, data } = this.props;\n    if (!isOwner) {\n      toast.error('잘못된 접근입니다.');\n      return;\n    }\n    if (!confirm('정말로 삭제하시겠습니까?')) {\n      return;\n    }\n    if (this.deletePostMutation) {\n      this.deletePostMutation({ variables: { id: data.id } });\n    }\n  }\n\n  @autobind\n  private postDeletePostMutation(data) {\n    const { history } = this.props;\n    const { DeletePost } = data;\n    if (DeletePost.success) {\n      setTimeout(() => {\n        history.push({\n          pathname: '/'\n        });\n      });\n    } else {\n      toast.error(DeletePost.error);\n    }\n  }\n\n  render() {\n    return (\n      <DeletePostMutation\n        mutation={DELETE_POST}\n        onCompleted={this.postDeletePostMutation}\n        refetchQueries={[\n          {\n            query: GET_POSTS,\n            variables: { skip: 0 }\n          }\n        ]}\n      >\n        {mutation => {\n          this.deletePostMutation = mutation;\n          return <PhotoContent {...this.state} {...this.props} onClickRemove={this.onClickRemove} />;\n        }}\n      </DeletePostMutation>\n    );\n  }\n}\n\nexport default withRouter(PhotoContentContainer);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PhotoContent from '~/components/PhotoContent';\nimport i18n from '~/helpers/i18n';\nimport { getPost_GetPost } from '~/types/api';\nimport s from './PostView.module.scss';\n\ninterface IProps {\n  t: (keyword: string) => string;\n  user?: any;\n  loading: boolean;\n  data: {\n    GetPost: getPost_GetPost;\n  };\n}\n\nconst PostView: React.SFC<IProps> = props => {\n  if (props.loading) {\n    return null;\n  }\n  const { GetPost: { post = null } = {} } = props.data || {};\n  if (!post) {\n    return null;\n  }\n  const loggedUserId = props.user && props.user.id;\n  const postedUserId = (post.author && post.author.id) || 0;\n  const isOwner = +loggedUserId === +postedUserId;\n  let title = post.content;\n  if (title.length > 10) {\n    title = `${title.substring(0, 10)}...`;\n  }\n  return (\n    <>\n      <Helmet>\n        <title>{title} - Moodselah</title>\n      </Helmet>\n      <div className={s.container}>\n        <div className={s.content}>\n          <PhotoContent data={post} isOwner={isOwner} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default i18n(PostView);\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { getPost } from '~/types/api';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PostView from './PostView';\nimport { GET_POST } from './queries';\n\ninterface IState {\n  id: number;\n}\n\ninterface IProps extends RouteComponentProps<any> {}\n\nclass PostViewQuery extends Query<getPost> {}\n\nclass PostViewContainer extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    const {\n      params: { id }\n    } = props.match;\n    this.state = {\n      id: +id\n    };\n  }\n\n  public render() {\n    const { id } = this.state;\n    return (\n      <PostViewQuery query={GET_POST} variables={{ id }}>\n        {({ data, loading }) => {\n          return <PostView {...this.props} {...this.state} loading={loading} data={data} />;\n        }}\n      </PostViewQuery>\n    );\n  }\n}\n\nexport default PostViewContainer;\n"],"sourceRoot":""}